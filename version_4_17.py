# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'demo4_17.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys, cv2
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow
from ClassSer import *
from sinwave import *
import time
from pyqtgraph import PlotWidget
import numpy as np
import pyqtgraph as pq
import threading
import datetime
from Camera_Thread import Camera_Thread
from Image_process import FindTarget
from window_ui import *
from Motor import *
from Plot import Plot
from ControlFunction import ControlFunction

class MyMainWindow(Plot,ControlFunction, Camera_Thread, Motor, Ui_MainWindow):
    def __init__(self, MainWindow):
        self.timer_send = QtCore.QTimer()  # 串口位置询问定时器
        self.setupUi(MainWindow)  # 启动Ui
        super(MyMainWindow, self).__init__()
        # self.button_connect()

    def button_connect(self):
        self.spinBox_Motor1_select.valueChanged['QString'].connect(self.Read_Motor1)
        self.spinBox_Motor2_select.valueChanged['QString'].connect(self.Read_Motor2)
        self.spinBox_Motor3_select.valueChanged['QString'].connect(self.Read_Motor3)
        self.checkBox_Motor1.stateChanged.connect(self.EnableMotor1)
        self.checkBox_Motor2.stateChanged.connect(self.EnableMotor2)
        self.checkBox_Motor3.stateChanged.connect(self.EnableMotor3)
        self.checkBox_Light.stateChanged.connect(self.EnableLight)
        self.verticalSlider_Light.valueChanged.connect(self.LightChange)

        # motor move
        self.lineEdit_Motor1.editingFinished.connect(self.ReadText_motor1)
        self.lineEdit_Motor2.editingFinished.connect(self.ReadText_motor2)
        self.lineEdit_Motor3.editingFinished.connect(self.ReadText_motor3)
        # add/reduce
        self.pushButton_Motor1_Add.clicked.connect(self.motor1_PR)
        self.pushButton_Motor1_Reduce.clicked.connect(self.motor1_PR_reverse)
        self.pushButton_Motor2_Add.clicked.connect(self.motor2_PR)
        self.pushButton_Motor2_Reduce.clicked.connect(self.motor2_PR_reverse)
        self.timer_read.timeout.connect(self.position_requset)

        ## plot enable
        self.pushButton_Enable.clicked.connect(self.plot_enable)
        self.timer_plot.timeout.connect(self.update_data)
        # sin 函数
        self.checkBox_sin.stateChanged.connect(self.SinDataSend)
        self.checkBox_Adaptive.stateChanged.connect(self.SinRun)
        self.checkBox_Sine_F.stateChanged.connect(self.sin_F_swap)
        self.checkBox_user.stateChanged.connect(self.UserDefine)
        self.checkBox_Random.stateChanged.connect(self.M_randam)
        self.wave = []
        self.wave_len = 0

        # send
        self.timer_send.timeout.connect(self.sindata)
        pass


if __name__ == '__main__':
    app = QApplication(sys.argv)
    MainWindow = QMainWindow()
    ui = MyMainWindow(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
